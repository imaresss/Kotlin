-- FUNCTION EXPRESSIONS --

package rsk

fun main(args: Array<String>) {
    println(max(1,2))
}

fun max(a: Int, b: Int): Int = if (a > b) a else b



-- FUNCTION EXTENSION --

fun main(args: Array<String>) {
    val text = "With    multiple \t whitespace"
    println(replaceMultipleWhiteSpace(text))
    println(text.replaceMultipleWhiteSpaceEx()) // extension function
}


fun replaceMultipleWhiteSpace(value: String) : String {
    var regex = Regex("\\s+")
    return regex.replace(value, " ")
}


fun String.replaceMultipleWhiteSpaceEx() : String {
    var regex = Regex("\\s+")
    return regex.replace(this, " ") //this is the string which cals this function
}

-- INFIX FUNCTION --
OPERATOR OVERLAODING

fun main(args: Array<String>) {
    val h1 = Header("H1")
    val h2 = Header("H2")

    val h3 = h1 plus h2

    println(h3.Name)

    val h4 = h1 + h2                   // this works because there is operator keyword before the infix fucntion otherwise it would throw an eror
    println(h4.Name)
}

class Header(var Name: String) {}

operator infix fun Header.plus(other: Header) : Header {
    return Header(this.Name + other.Name)
}

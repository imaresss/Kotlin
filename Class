Classes in Kotlin

classes and its methods are final by default 

1) Definition 
 class Customer

2) Constructor 

class Customer(var id : Int , var name : String)

fun main(args : Array<String>){

  val customer = Customer(1 , "Pulkit");
}

This defines the constructor and it is necessary to use var/val (for id and name in this case) for to make a property of class 

3) init in constructor

class Customer(var id : Int , var name : String){

  init{
   name = name.toUpperCase();
  }

}

fun main(args : Array<String>){

  val customer = Customer(1 , "Pulkit");
}

The initializer block is executed when object is created

4) class Person -> this is a class declaration 

   class Person() -> this is a class declaration with its constructor also
   
   
-----------------------ANOTHER. EXAMPLE

fun main(args: Array<String>) {
    val kevin = Student("Kevin", "Jones", 1, "some tutor")       // calling secondary constructor
    print(kevin.id)
    
   val kevin2 = Student("Kevin", "Jones", 1)           // calling primary constructor
}

abstract class Person(var firstName:String, var lastName: String) {

    open fun getName() : String = "$firstName $lastName"
    abstract fun getAddress():String
}

class Student(firstName:String, lastName: String, _id:Int, var tutor:String = "") : Person(firstName, lastName) {
    val id : Int
    val tutor : String

    init {
        id = _id 
        tutor = ""
    }

   constructor(firstName:String, lastName: String, _id:Int,tutor : String) : this(firstName, lastName , _id)            //secondary constructor
   { 
 
     }
   

    override fun getAddress(): String {
        return ""
    }

    override fun getName() : String{return ""}
}
